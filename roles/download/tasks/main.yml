---

- name: Download k3s binary x64
  get_url:
    url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s
    checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-amd64.txt
    dest: /usr/local/bin/k3s
    owner: root
    group: root
    mode: 0755
  register: k3s_amd64_downloaded
  until: k3s_amd64_downloaded is not failed
  retries: 4
  delay: 5
  when: ansible_facts.architecture == "x86_64"

- name: Download k3s binary arm64
  get_url:
    url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s-arm64
    checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-arm64.txt
    dest: /usr/local/bin/k3s
    owner: root
    group: root
    mode: 0755
  register: k3s_arm64_downloaded
  until: k3s_arm64_downloaded is not failed
  retries: 4
  delay: 5
  when:
    - ( ansible_facts.architecture is search("arm") and
        ansible_facts.userspace_bits == "64" ) or
      ansible_facts.architecture is search("aarch64")

- name: Download helm tar to first master which will be our control node
  ansible.builtin.get_url:
    url: https://get.helm.sh/helm-{{ helm_version }}-linux-{{ arch }}.tar.gz
    checksum: sha256:https://get.helm.sh/helm-{{ helm_version }}-linux-{{ arch }}.tar.gz.sha256sum
    dest: /tmp/helm.tar.gz
    owner: root
    group: root
    mode: 0644
  vars:
    arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }}"
  register: helm_downloaded
  until: helm_downloaded is not failed
  retries: 4
  delay: 10
  when: inventory_hostname == groups['master'][0]

- name: Extract the helm binary
  ansible.builtin.unarchive:
    src: /tmp/helm.tar.gz
    dest: /usr/local/bin
    remote_src: yes
    owner: root
    group: root
    mode: 0755
    extra_opts:
      - linux-amd64/helm
      - --strip-components=1
  when: inventory_hostname == groups['master'][0]
